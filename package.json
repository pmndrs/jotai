{
  "name": "jotai",
  "private": true,
  "version": "1.9.0",
  "description": "ðŸ‘» Next gen state management that will spook you",
  "main": "./index.js",
  "types": "./index.d.ts",
  "typesVersions": {
    "<4.5": {
      "esm/*": [
        "ts3.4/*"
      ],
      "*": [
        "ts3.4/*"
      ]
    }
  },
  "exports": {
    "./package.json": "./package.json",
    ".": {
      "import": {
        "types": "./esm/index.d.mts",
        "default": "./esm/index.mjs"
      },
      "types": "./index.d.ts",
      "module": "./esm/index.js",
      "default": "./index.js"
    },
    "./utils": {
      "import": {
        "types": "./esm/utils.d.mts",
        "default": "./esm/utils.mjs"
      },
      "types": "./utils.d.ts",
      "module": "./esm/utils.js",
      "default": "./utils.js"
    },
    "./devtools": {
      "import": {
        "types": "./esm/devtools.d.mts",
        "default": "./esm/devtools.mjs"
      },
      "types": "./devtools.d.ts",
      "module": "./esm/devtools.js",
      "default": "./devtools.js"
    },
    "./immer": {
      "import": {
        "types": "./esm/immer.d.mts",
        "default": "./esm/immer.mjs"
      },
      "types": "./immer.d.ts",
      "module": "./esm/immer.js",
      "default": "./immer.js"
    },
    "./optics": {
      "import": {
        "types": "./esm/optics.d.mts",
        "default": "./esm/optics.mjs"
      },
      "types": "./optics.d.ts",
      "module": "./esm/optics.js",
      "default": "./optics.js"
    },
    "./query": {
      "import": {
        "types": "./esm/query.d.mts",
        "default": "./esm/query.mjs"
      },
      "types": "./query.d.ts",
      "module": "./esm/query.js",
      "default": "./query.js"
    },
    "./xstate": {
      "import": {
        "types": "./esm/xstate.d.mts",
        "default": "./esm/xstate.mjs"
      },
      "types": "./xstate.d.ts",
      "module": "./esm/xstate.js",
      "default": "./xstate.js"
    },
    "./valtio": {
      "import": {
        "types": "./esm/valtio.d.mts",
        "default": "./esm/valtio.mjs"
      },
      "types": "./valtio.d.ts",
      "module": "./esm/valtio.js",
      "default": "./valtio.js"
    },
    "./zustand": {
      "import": {
        "types": "./esm/zustand.d.mts",
        "default": "./esm/zustand.mjs"
      },
      "types": "./zustand.d.ts",
      "module": "./esm/zustand.js",
      "default": "./zustand.js"
    },
    "./redux": {
      "import": {
        "types": "./esm/redux.d.mts",
        "default": "./esm/redux.mjs"
      },
      "types": "./redux.d.ts",
      "module": "./esm/redux.js",
      "default": "./redux.js"
    },
    "./urql": {
      "import": {
        "types": "./esm/urql.d.mts",
        "default": "./esm/urql.mjs"
      },
      "types": "./urql.d.ts",
      "module": "./esm/urql.js",
      "default": "./urql.js"
    },
    "./babel/plugin-debug-label": {
      "import": {
        "types": "./esm/babel/plugin-debug-label.d.mts",
        "default": "./esm/babel/plugin-debug-label.mjs"
      },
      "types": "./babel/plugin-debug-label.d.ts",
      "module": "./esm/babel/plugin-debug-label.js",
      "default": "./babel/plugin-debug-label.js"
    },
    "./babel/plugin-react-refresh": {
      "import": {
        "types": "./esm/babel/plugin-react-refresh.d.mts",
        "default": "./esm/babel/plugin-react-refresh.mjs"
      },
      "types": "./babel/plugin-react-refresh.d.ts",
      "module": "./esm/babel/plugin-react-refresh.js",
      "default": "./babel/plugin-react-refresh.js"
    },
    "./babel/preset": {
      "import": {
        "types": "./esm/babel/preset.d.mts",
        "default": "./esm/babel/preset.mjs"
      },
      "types": "./babel/preset.d.ts",
      "module": "./esm/babel/preset.js",
      "default": "./babel/preset.js"
    }
  },
  "files": [
    "**"
  ],
  "sideEffects": false,
  "scripts": {
    "prebuild": "shx rm -rf dist",
    "build": "concurrently -m 8 'yarn:build:*'",
    "build-watch": "concurrently -n watch: 'yarn:build:* --watch'",
    "build:base": "rollup -c",
    "build:utils": "rollup -c --config-utils",
    "build:devtools": "rollup -c --config-devtools",
    "build:immer": "rollup -c --config-immer",
    "build:optics": "rollup -c --config-optics",
    "build:query": "rollup -c --config-query",
    "build:xstate": "rollup -c --config-xstate",
    "build:valtio": "rollup -c --config-valtio",
    "build:zustand": "rollup -c --config-zustand",
    "build:redux": "rollup -c --config-redux",
    "build:urql": "rollup -c --config-urql",
    "build:babel:plugin-debug-label": "rollup -c --config-babel_plugin-debug-label",
    "build:babel:plugin-react-refresh": "rollup -c --config-babel_plugin-react-refresh",
    "build:babel:preset": "rollup -c --config-babel_preset",
    "postbuild": "yarn copy && yarn patch-ts3.4 && yarn patch-esm-ts && yarn patch-readme",
    "prettier": "prettier '*.{js,json,md}' '{src,tests,benchmarks,docs}/**/*.{ts,tsx,md,mdx}' --write",
    "prettier:ci": "prettier '*.{js,json,md}' '{src,tests,benchmarks,docs}/**/*.{ts,tsx,md,mdx}' --list-different",
    "eslint": "eslint --fix '*.{js,json}' '{src,tests,benchmarks}/**/*.{ts,tsx}'",
    "eslint:ci": "eslint '*.{js,json}' '{src,tests,benchmarks}/**/*.{ts,tsx}'",
    "pretest": "tsc --noEmit",
    "test": "jest && jest --setupFiles ./tests/setProviderLessMode.ts && jest --setupFiles ./tests/setVersionedWriteMode.ts",
    "test:ci": "jest",
    "test:dev": "jest --watch --no-coverage",
    "test:coverage:watch": "jest --watch",
    "copy": "shx cp -r dist/src/* dist/esm && shx cp -r dist/src/* dist && shx rm -rf dist/src && shx rm -rf dist/{src,tests} && downlevel-dts dist dist/ts3.4 && shx cp package.json readme.md LICENSE dist && json -I -f dist/package.json -e \"this.private=false; this.devDependencies=undefined; this.optionalDependencies=undefined; this.scripts=undefined; this.prettier=undefined; this.jest=undefined;\"",
    "patch-ts3.4": "node -e \"require('shelljs').find('dist/ts3.4/**/*.d.ts').forEach(f=>require('fs').appendFileSync(f,'declare type Awaited<T> = T extends Promise<infer V> ? V : T;'))\"",
    "patch-esm-ts": "node -e \"require('shelljs').find('dist/esm/**/*.d.ts').forEach(f=>require('fs').copyFileSync(f,f.replace(/\\.ts$/,'.mts')))\"; shx sed -i \"s/ from '(\\..*)';$/ from '\\$1.mjs';/\" 'dist/esm/**/*.d.mts'; shx sed -i \"s/^declare module '(\\..*)'/declare module '\\$1.mjs'/\" 'dist/esm/**/*.d.mts'",
    "patch-readme": "shx sed -i 's/.*dark mode.*//' dist/readme.md"
  },
  "engines": {
    "node": ">=12.7.0"
  },
  "prettier": {
    "semi": false,
    "trailingComma": "es5",
    "singleQuote": true,
    "bracketSameLine": true,
    "tabWidth": 2,
    "printWidth": 80
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pmndrs/jotai.git"
  },
  "keywords": [
    "react",
    "state",
    "manager",
    "management",
    "recoil",
    "store"
  ],
  "author": "Daishi Kato",
  "contributors": [],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/pmndrs/jotai/issues"
  },
  "homepage": "https://github.com/pmndrs/jotai",
  "jest": {
    "rootDir": ".",
    "testEnvironment": "jsdom",
    "transform": {
      "^.+\\.(t|j)sx?$": [
        "@swc/jest"
      ]
    },
    "globals": {
      "__DEV__": true
    },
    "moduleNameMapper": {
      "^jotai$": "<rootDir>/src/index.ts",
      "^jotai/(.*)$": "<rootDir>/src/$1.ts"
    },
    "modulePathIgnorePatterns": [
      "dist"
    ],
    "testRegex": "test.(js|ts|tsx)$",
    "coverageDirectory": "./coverage/",
    "collectCoverage": true,
    "coverageReporters": [
      "json",
      "html",
      "text",
      "text-summary"
    ],
    "collectCoverageFrom": [
      "src/**/*.{js,ts,tsx}",
      "tests/**/*.{js,ts,tsx}"
    ]
  },
  "devDependencies": {
    "@babel/core": "^7.19.6",
    "@babel/plugin-transform-react-jsx": "^7.19.0",
    "@babel/plugin-transform-typescript": "^7.19.3",
    "@babel/preset-env": "^7.19.4",
    "@babel/template": "^7.18.10",
    "@babel/types": "^7.19.4",
    "@redux-devtools/extension": "^3.2.3",
    "@rollup/plugin-babel": "^6.0.2",
    "@rollup/plugin-node-resolve": "^15.0.1",
    "@rollup/plugin-replace": "^5.0.1",
    "@rollup/plugin-typescript": "^9.0.2",
    "@swc/core": "^1.3.11",
    "@swc/jest": "^0.2.23",
    "@tanstack/query-core": "^4.13.0",
    "@testing-library/react": "^13.4.0",
    "@types/jest": "^29.2.0",
    "@types/react": "^18.0.23",
    "@types/react-dom": "^18.0.7",
    "@typescript-eslint/eslint-plugin": "^5.41.0",
    "@typescript-eslint/parser": "^5.41.0",
    "@urql/core": "^3.0.5",
    "benny": "^3.7.1",
    "concurrently": "^7.5.0",
    "downlevel-dts": "^0.11.0",
    "esbuild": "^0.15.12",
    "eslint": "^8.26.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^27.1.3",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-react": "^7.31.10",
    "eslint-plugin-react-hooks": "^4.6.0",
    "graphql": "^16.6.0",
    "immer": "^9.0.16",
    "jest": "^29.2.2",
    "jest-environment-jsdom": "^29.2.2",
    "jotai-tanstack-query": "^0.4.0",
    "jotai-urql": "^0.2.0",
    "json": "^11.0.0",
    "optics-ts": "^2.3.0",
    "postinstall-postinstall": "^2.1.0",
    "prettier": "^2.7.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "redux": "^4.2.0",
    "rollup": "^3.2.3",
    "rollup-plugin-esbuild": "^4.10.1",
    "rollup-plugin-terser": "^7.0.2",
    "rxjs": "^7.5.7",
    "shx": "^0.3.4",
    "ts-expect": "^1.3.0",
    "ts-node": "^10.9.1",
    "tslib": "^2.4.0",
    "typescript": "^4.8.4",
    "valtio": "^1.7.4",
    "wonka": "^6.1.0",
    "xstate": "^4.33.6",
    "zustand": "^4.1.3"
  },
  "resolutions": {
    "date-fns": "2.27.0"
  },
  "peerDependencies": {
    "@babel/core": "*",
    "@babel/template": "*",
    "immer": "*",
    "jotai-tanstack-query": "*",
    "jotai-urql": "*",
    "optics-ts": "*",
    "react": ">=16.8",
    "valtio": "*",
    "xstate": "*"
  },
  "peerDependenciesMeta": {
    "@babel/core": {
      "optional": true
    },
    "@babel/template": {
      "optional": true
    },
    "immer": {
      "optional": true
    },
    "jotai-urql": {
      "optional": true
    },
    "jotai-tanstack-query": {
      "optional": true
    },
    "optics-ts": {
      "optional": true
    },
    "valtio": {
      "optional": true
    },
    "xstate": {
      "optional": true
    }
  }
}
